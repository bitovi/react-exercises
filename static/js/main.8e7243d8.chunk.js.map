{"version":3,"sources":["app/components/Square.js","app/components/Board.js","app/utils.js","app/components/Game.js","app/components/App.js","app/index.js"],"names":["Square","onClick","symbol","displayAsHint","id","theme","useContext","ThemeContext","className","style","color","text","background","Board","onSquareClick","board","hintSquare","map","index","key","blankBoard","themes","light","dark","getHintForBoard","currentPlayerSymbol","a","boardAsString","s","axios","get","join","headers","res","data","recommendation","React","createContext","Game","useState","setBoard","isXTurn","setIsXTurn","setHintSquare","setTheme","getCurrentPlayer","Provider","value","squareIndex","newBoard","find","combo","boardHasWinner","alert","App","ReactDOM","render","StrictMode","exercise","name","document","getElementById"],"mappings":"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","file":"static/js/main.8e7243d8.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport { ThemeContext } from './Game';\n\nfunction Square({ onClick, symbol, displayAsHint, id }) {\n  const theme = useContext(ThemeContext);\n\n  return (\n    <div\n      id={id}\n      className=\"square\"\n      onClick={onClick}\n      style={{\n        color: theme.text,\n        background: displayAsHint ? '#9AE6B4' : theme.background,\n      }}\n    >\n      {symbol}\n    </div>\n  );\n}\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\nfunction Board({ onSquareClick, board, hintSquare }) {\n  return (\n    <div className=\"board\">\n      {board.map((symbol, index) => (\n        <Square\n          key={index}\n          id={`square-${index}`}\n          symbol={symbol}\n          onClick={() => onSquareClick(index)}\n          displayAsHint={index === hintSquare}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Board;\n","import axios from 'axios';\n\nexport const blankBoard = ['', '', '', '', '', '', '', '', ''];\n\nexport const themes = {\n  light: {\n    text: '#4A5568',\n    background: '#EDF2F7',\n  },\n  dark: {\n    text: '#EDF2F7',\n    background: '#4A5568',\n  },\n};\n\nexport async function getHintForBoard(board, currentPlayerSymbol) {\n  const boardAsString = board.map((s) => (s ? s : '-'));\n  const res = await axios.get(\n    `https://stujo-tic-tac-toe-stujo-v1.p.rapidapi.com/${boardAsString.join(\n      '',\n    )}/${currentPlayerSymbol}`,\n    {\n      headers: {\n        'x-rapidapi-key': '5eb61409e7mshed3223fe50b7b37p1267bejsn264f99c41c83',\n      },\n    },\n  );\n  return res.data.recommendation;\n}\n\nexport function boardHasWinner(board) {\n  const winningCombos = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  const winningCombo = winningCombos.find((combo) => {\n    if (\n      board[combo[0]] !== '' &&\n      board[combo[0]] === board[combo[1]] &&\n      board[combo[0]] === board[combo[2]]\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n  return !!winningCombo;\n}\n","import React, { useState } from 'react';\nimport Board from './Board';\nimport { getHintForBoard, boardHasWinner, blankBoard, themes } from '../utils';\n\nexport const ThemeContext = React.createContext(themes.light);\n\nfunction Game() {\n  const [board, setBoard] = useState(blankBoard);\n  const [isXTurn, setIsXTurn] = useState(true);\n  const [hintSquare, setHintSquare] = useState(-1);\n  const [theme, setTheme] = useState(themes.light);\n\n  function handleSquareClick(squareIndex) {\n    if (!board[squareIndex]) {\n      const newBoard = [...board];\n      newBoard[squareIndex] = getCurrentPlayer();\n\n      if (boardHasWinner(newBoard)) {\n        alert(`${getCurrentPlayer()} Wins!`);\n        resetGame();\n      } else {\n        setBoard(newBoard);\n        setIsXTurn(!isXTurn);\n      }\n      setHintSquare(-1);\n    }\n  }\n\n  function resetGame() {\n    setIsXTurn(true);\n    setBoard(blankBoard);\n  }\n\n  const getCurrentPlayer = () => (isXTurn ? 'X' : 'O');\n\n  async function getHint() {\n    setHintSquare(await getHintForBoard(board, getCurrentPlayer()));\n  }\n\n  function toggleTheme() {\n    setTheme(theme === themes.light ? themes.dark : themes.light);\n  }\n\n  return (\n    <>\n      <ThemeContext.Provider value={theme}>\n        <Board\n          board={board}\n          onSquareClick={handleSquareClick}\n          hintSquare={hintSquare}\n        />\n      </ThemeContext.Provider>\n      <button onClick={getHint}>Get Hint</button>\n      <button onClick={toggleTheme}>Toggle Theme</button>\n      current player: {getCurrentPlayer()}\n    </>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './Game';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport exercise from './exercise.json';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    {exercise.name && <div>Exercise: {exercise.name}</div>}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}